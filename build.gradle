plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.ryandens.javaagent-test' version '0.8.0'
}

group = 'com.coherentsolutions.pot'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}
configurations.configureEach {
    resolutionStrategy {
        force 'org.apache.commons:commons-compress:1.27.1'
    }
}

jacoco {
    toolVersion = "0.8.13"
}

checkstyle {
    toolVersion = '10.26.1'
    configFile = file("config/checkstyle/google_checks.xml")
    ignoreFailures = false
    showViolations = true
    maxErrors = 0
    maxWarnings = 0
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    implementation 'com.auth0:auth0:2.22.0'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:postgresql:1.21.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.21.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testJavaagent 'net.bytebuddy:byte-buddy-agent:1.17.6'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}
jacocoTestCoverageVerification {
    dependsOn test
    violationRules {
        rule {
            limit{
                minimum = 0.8
            }
        }
    }
}

check {
    dependsOn jacocoTestCoverageVerification
}
